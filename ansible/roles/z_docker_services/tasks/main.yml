---
- name: ensure packages are installed
  become: 'yes'
  ansible.builtin.apt:
    name:
      - 'git'
      - 'python3'
      - 'python3-pip'
      - 'libpq-dev'
      - 'libldap2-dev'
      - 'libsasl2-dev'
    state: 'present'
    update_cache: 'yes'

- name: install python packages for managing docker
  ansible.builtin.pip:
    name:
      - 'pyyaml'
      - 'docker'
      - 'docker-compose'
      - 'psycopg2'
      - 'python-ldap'

- name: ensure services/ is absent
  become: yes
  ansible.builtin.file:
    path: '~/docker/services'
    state: 'absent'

- name: copy local services/
  ansible.builtin.copy:
    src: ../services/
    dest: '~/docker/services/'
    owner: ansible
    group: ansible
    mode: '0644'

- name: get compose.yml files
  ansible.builtin.shell: ls -1 /home/ansible/docker/services/*/compose.yml | paste -sd ":" -
  register: compose_files

- name: copy templates/secrets files
  ansible.builtin.include_tasks: files.yml

- name: Run `docker-compose up` for postgres
  environment:
    COMPOSE_FILE: "{{ compose_files.stdout }}"
  community.docker.docker_compose:
    project_src: '~/docker'
    remove_orphans: 'yes'
    state: 'present'
    recreate: 'smart'
    services:
      - 'postgres'

- name: run postgres stuff
  ansible.builtin.include_tasks: postgres.yml

- name: Run `docker-compose up` for openldap
  environment:
    COMPOSE_FILE: "{{ compose_files.stdout }}"
  community.docker.docker_compose:
    project_src: '~/docker'
    remove_orphans: 'yes'
    state: 'present'
    recreate: 'smart'
    services:
      - 'openldap'

- name: run openldap stuff
  ansible.builtin.include_tasks: openldap.yml

- name: Run `docker-compose up`
  environment:
    COMPOSE_FILE: "{{ compose_files.stdout }}"
  community.docker.docker_compose:
    project_src: '~/docker'
    remove_orphans: 'yes'
    state: 'present'
    recreate: 'smart'
    services:
      - 'eas'
      - 'hedgedoc'
      - 'keycloak'
      - 'lam'
      - 'ntfy'
      - 'openldap'
      - 'photostructure'
      - 'postgres'
      #- 'radicale'
      - 'redis'
      - 'traefik'
      - 'vaultwarden'

- name: Prune containers older than 24h
  community.docker.docker_prune:
    containers: true
    containers_filters:
      until: 24h

# todo: mount data dir from nfs
