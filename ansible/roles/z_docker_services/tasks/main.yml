---
- name: ensure debian packages are installed
  become: 'yes'
  ansible.builtin.apt:
    name:
      - 'default-libmysqlclient-dev'
      - 'git'
      - 'libldap2-dev'
      - 'libmariadb-dev'
      - 'libpq-dev'
      - 'libsasl2-dev'
      - 'python3'
      - 'python3-mysqldb'
      - 'python3-pip'
      - 'rsync'
    state: 'present'
    update_cache: 'yes'
  when: ansible_os_family == 'Debian'

- name: ensure rhel packages are installed
  become: 'yes'
  ansible.builtin.yum:
    name:
      - 'fuse-overlayfs'
      - 'gcc'
      - 'git'
      - 'libpq-devel'
      - 'mariadb-devel'
      - 'openldap-devel'
      - 'python39'
      - 'python39-devel'
      - 'python39-pip'
      - 'rsync'
    state: 'latest'
  when: ansible_os_family == 'RedHat'

- name: install python packages for managing docker
  ansible.builtin.pip:
    name:
      - 'docker'
      - 'docker-compose'
      - 'mysqlclient'
      - 'psycopg2'
      - 'python-ldap'
      - 'pyyaml'
    executable: pip3.9
    extra_args: --user

- name: change ssh port to 2222
  become: 'yes'
  ansible.builtin.lineinfile:
    dest: '/etc/ssh/sshd_config'
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
    state: 'present'
  with_items:
    - regexp: '^Port 2222$'
      line: 'Port 2222'

- name: restart ssh
  become: 'yes'
  ansible.builtin.service:
    name: 'sshd'
    state: 'restarted'

- name: ensure services/ is absent
  become: yes
  ansible.builtin.file:
    path: '/home/ansible/docker/services'
    state: 'absent'

- name: ensure docker dir exists
  become: yes
  ansible.builtin.file:
    path: '/home/ansible/docker'
    state: 'directory'
    owner: ansible
    group: ansible
    mode: '0700'

- name: create symbolic link for data dir
  become: yes
  ansible.builtin.file:
    src: '/mnt/eagle/data/docker'
    dest: '/home/ansible/docker/data'
    state: 'link'
    owner: ansible
    group: ansible

#- name: copy local services/
#  ansible.builtin.copy:
#    src: ../services/
#    dest: '~/docker/services/'
#    owner: ansible
#    group: ansible
#    mode: '0644'

- name: synchronize local services/
  ansible.posix.synchronize:
    src: ../services/
    dest: '~/docker/services/'
    mode: 'push'

- name: get compose.yml files
  ansible.builtin.shell: ls -1 /home/ansible/docker/services/*/compose.yml | paste -sd ":" -
  register: compose_files

- name: copy templates/secrets files
  ansible.builtin.include_tasks: files.yml

- name: Run `docker-compose up` for postgres
  environment:
    COMPOSE_FILE: "{{ compose_files.stdout }}"
    COMPOSE_PROJECT_NAME: 'zah'
  community.docker.docker_compose:
    project_src: '~/docker'
    remove_orphans: 'yes'
    state: 'present'
    recreate: 'smart'
    services:
      - 'postgres'

- name: run postgres stuff
  ansible.builtin.include_tasks: postgres.yml

- name: Run `docker-compose up` for mariadb
  environment:
    COMPOSE_FILE: "{{ compose_files.stdout }}"
    COMPOSE_PROJECT_NAME: 'zah'
  community.docker.docker_compose:
    project_src: '~/docker'
    remove_orphans: 'yes'
    state: 'present'
    recreate: 'smart'
    services:
      - 'mariadb'

- name: run mariadb stuff
  ansible.builtin.include_tasks: mariadb.yml

- name: Run `docker-compose up` for openldap
  environment:
    COMPOSE_FILE: "{{ compose_files.stdout }}"
    COMPOSE_PROJECT_NAME: 'zah'
  community.docker.docker_compose:
    project_src: '~/docker'
    remove_orphans: 'yes'
    state: 'present'
    recreate: 'smart'
    services:
      - 'openldap'

- name: run openldap stuff
  ansible.builtin.include_tasks: openldap.yml

- name: Run `docker-compose up`
  environment:
    COMPOSE_FILE: "{{ compose_files.stdout }}"
    COMPOSE_PROJECT_NAME: 'zah'
  community.docker.docker_compose:
    project_src: '~/docker'
    remove_orphans: 'yes'
    state: 'present'
    recreate: 'smart'
    services:
      - 'baikal'
      - 'eas'
      - 'ghost'
      - 'gitea'
      - 'healthchecks'
      - 'hedgedoc'
      - 'homeassistant'
      - 'keycloak'
      - 'lam'
      - 'mariadb'
      - 'memcached'
      - 'misskey'
      - 'navidrome'
      - 'ntfy'
      - 'openldap'
      - 'postgres'
      - 'redis'
      - 'syncthing'
      - 'traefik'
      - 'unifi-controller'
      - 'vaultwarden'
      - 'yarr'
      #- 'photostructure'
      # - 'cryptpad'
      # - 'dashy'
      #- 'rallly'
      #- 'sheetable'
      #- 'thelounge'
      #- 'kanboard'

- name: Prune containers older than 24h
  community.docker.docker_prune:
    containers: true
    containers_filters:
      until: 24h

# todo: mount data dir from nfs
